{"ast":null,"code":"var _jsxFileName = \"/Users/irajakbar/Desktop/ENSF381_Assignment05/src/components/Productpage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Header from './Header';\nimport ProductList from './ProductList';\nimport Cart from './Cart';\nimport Footer from './Footer';\nimport { useHistory } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Productpage = () => {\n  _s();\n  const [cartItems, setCartItems] = useState([]);\n  const [products, setProducts] = useState([]); // State for products fetched from the backend\n  const history = useHistory(); // useHistory hook from react-router-dom for redirection\n\n  // Check if the user is authenticated, otherwise redirect to the login page\n  useEffect(() => {\n    // Placeholder for authentication check. Replace with your actual auth check logic.\n    const isAuthenticated = true; // Replace with actual authentication check\n    if (!isAuthenticated) {\n      history.push('/login');\n    }\n  }, [history]);\n\n  // Load cart items from localStorage on component mount\n  useEffect(() => {\n    const storedCartItems = localStorage.getItem('cartItems');\n    if (storedCartItems) {\n      setCartItems(JSON.parse(storedCartItems));\n    }\n  }, []);\n\n  // Save cart items to localStorage whenever cartItems changes\n  useEffect(() => {\n    localStorage.setItem('cartItems', JSON.stringify(cartItems));\n  }, [cartItems]);\n\n  // Fetch products from the backend on component mount\n  useEffect(() => {\n    fetch('/api/products') // Make sure to use the correct backend endpoint\n    .then(response => {\n      if (!response.ok) {\n        return response.text().then(text => {\n          throw new Error(text);\n        });\n      }\n      return response.json();\n    }).then(data => setProducts(data)).catch(error => {\n      console.error('Error fetching products:', error);\n    });\n  }, []);\n  const addToCart = product => {\n    // ... existing addToCart logic\n  };\n  const removeFromCart = productId => {\n    // ... existing removeFromCart logic\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ProductList, {\n      products: products,\n      onAddToCart: addToCart\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Cart, {\n      cartItems: cartItems,\n      onRemove: removeFromCart\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n};\n_s(Productpage, \"K0UOzHffwbnKOkD8DWUNYMbPxTU=\", false, function () {\n  return [useHistory];\n});\n_c = Productpage;\nexport default Productpage;\nvar _c;\n$RefreshReg$(_c, \"Productpage\");","map":{"version":3,"names":["React","useState","useEffect","Header","ProductList","Cart","Footer","useHistory","jsxDEV","_jsxDEV","Productpage","_s","cartItems","setCartItems","products","setProducts","history","isAuthenticated","push","storedCartItems","localStorage","getItem","JSON","parse","setItem","stringify","fetch","then","response","ok","text","Error","json","data","catch","error","console","addToCart","product","removeFromCart","productId","children","fileName","_jsxFileName","lineNumber","columnNumber","onAddToCart","onRemove","_c","$RefreshReg$"],"sources":["/Users/irajakbar/Desktop/ENSF381_Assignment05/src/components/Productpage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Header from './Header';\nimport ProductList from './ProductList';\nimport Cart from './Cart';\nimport Footer from './Footer';\nimport { useHistory } from 'react-router-dom';\n\nconst Productpage = () => {\n  const [cartItems, setCartItems] = useState([]);\n  const [products, setProducts] = useState([]); // State for products fetched from the backend\n  const history = useHistory(); // useHistory hook from react-router-dom for redirection\n\n  // Check if the user is authenticated, otherwise redirect to the login page\n  useEffect(() => {\n    // Placeholder for authentication check. Replace with your actual auth check logic.\n    const isAuthenticated = true; // Replace with actual authentication check\n    if (!isAuthenticated) {\n      history.push('/login');\n    }\n  }, [history]);\n\n  // Load cart items from localStorage on component mount\n  useEffect(() => {\n    const storedCartItems = localStorage.getItem('cartItems');\n    if (storedCartItems) {\n      setCartItems(JSON.parse(storedCartItems));\n    }\n  }, []);\n\n  // Save cart items to localStorage whenever cartItems changes\n  useEffect(() => {\n    localStorage.setItem('cartItems', JSON.stringify(cartItems));\n  }, [cartItems]); \n\n  // Fetch products from the backend on component mount\n  useEffect(() => {\n    fetch('/api/products') // Make sure to use the correct backend endpoint\n      .then(response => {\n        if (!response.ok) {\n          return response.text().then(text => { throw new Error(text) });\n        }\n        return response.json();\n      })\n      .then(data => setProducts(data))\n      .catch(error => {\n        console.error('Error fetching products:', error);\n      });\n  }, []);\n\n  const addToCart = (product) => {\n    // ... existing addToCart logic\n  };\n\n  const removeFromCart = (productId) => {\n    // ... existing removeFromCart logic\n  };\n\n  return (\n    <div>\n      <Header />\n      {/* Pass fetched products to ProductList as a prop */}\n      <ProductList products={products} onAddToCart={addToCart} />\n      <Cart cartItems={cartItems} onRemove={removeFromCart} />\n      <Footer />\n    </div>\n  );\n};\n\nexport default Productpage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}