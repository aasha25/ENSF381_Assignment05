{"ast":null,"code":"var _jsxFileName = \"/Users/irajakbar/Desktop/ENSF381_Assignment05/src/components/SignUpForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SignupForm = ({\n  onSwitch\n}) => {\n  _s();\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [email, setEmail] = useState('');\n  const [generalError, setGeneralError] = useState('');\n  const [signupMessage, setSignupMessage] = useState('');\n  const handleSubmit = event => {\n    event.preventDefault();\n    setGeneralError('');\n    setSignupMessage('');\n    if (!username || !password || !confirmPassword || !email) {\n      setGeneralError('All fields are required!');\n      return;\n    }\n    if (password !== confirmPassword) {\n      setGeneralError('Passwords do not match!');\n      return;\n    }\n\n    // Perform the API call to signup\n    fetch('/register', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        username,\n        password,\n        email\n      })\n    }).then(response => response.json()).then(data => {\n      if (data.error) {\n        setSignupMessage(data.error);\n      } else {\n        setSignupMessage('Signup successful! You can now login.');\n        // Optionally clear the form or redirect the user to the login page\n      }\n    }).catch(error => {\n      console.error('Error during signup:', error);\n      setSignupMessage('An error occurred during signup. Please try again.');\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Signup\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), generalError && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        color: 'red'\n      },\n      children: generalError\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 24\n    }, this), signupMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: signupMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 25\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Signup\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: onSwitch,\n        children: \"Switch to Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n_s(SignupForm, \"VW6I/9/SfKjKgRH0KwBcYhntm/8=\");\n_c = SignupForm;\nexport default SignupForm;\nvar _c;\n$RefreshReg$(_c, \"SignupForm\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","SignupForm","onSwitch","_s","username","setUsername","password","setPassword","confirmPassword","setConfirmPassword","email","setEmail","generalError","setGeneralError","signupMessage","setSignupMessage","handleSubmit","event","preventDefault","fetch","method","headers","body","JSON","stringify","then","response","json","data","error","catch","console","children","fileName","_jsxFileName","lineNumber","columnNumber","style","color","onSubmit","type","onClick","_c","$RefreshReg$"],"sources":["/Users/irajakbar/Desktop/ENSF381_Assignment05/src/components/SignUpForm.js"],"sourcesContent":["import React, { useState } from 'react';\n\nconst SignupForm = ({ onSwitch }) => {\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [email, setEmail] = useState('');\n  const [generalError, setGeneralError] = useState('');\n  const [signupMessage, setSignupMessage] = useState('');\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    setGeneralError('');\n    setSignupMessage('');\n\n    if (!username || !password || !confirmPassword || !email) {\n      setGeneralError('All fields are required!');\n      return;\n    }\n\n    if (password !== confirmPassword) {\n      setGeneralError('Passwords do not match!');\n      return;\n    }\n\n    // Perform the API call to signup\n    fetch('/register', {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({ username, password, email }),\n    })\n    .then(response => response.json())\n    .then(data => {\n      if (data.error) {\n        setSignupMessage(data.error);\n      } else {\n        setSignupMessage('Signup successful! You can now login.');\n        // Optionally clear the form or redirect the user to the login page\n      }\n    })\n    .catch(error => {\n      console.error('Error during signup:', error);\n      setSignupMessage('An error occurred during signup. Please try again.');\n    });\n  };\n\n  return (\n    <div>\n      <h2>Signup</h2>\n      {generalError && <div style={{ color: 'red' }}>{generalError}</div>}\n      {signupMessage && <p>{signupMessage}</p>}\n      <form onSubmit={handleSubmit}>\n        {/* Form fields */}\n        <button type=\"submit\">Signup</button>\n        <button type=\"button\" onClick={onSwitch}>Switch to Login</button>\n      </form>\n    </div>\n  );\n};\n\nexport default SignupForm;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}